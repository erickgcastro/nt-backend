services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: international-plans-api
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:dev
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    container_name: international-plans-db
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-international_plans}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: international-plans-pgadmin
    restart: always
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
